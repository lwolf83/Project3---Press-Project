language: csharp
mono: none
dotnet: 3.1
solution: "Project 3 - Main/Project 3 - Press Project.sln"

jobs:
   include: 
   #  - stage:  "build"
   #    Name: "Build core application on .NET Core 3.1"
   #    script: 
   #        - dotnet restore 'Project 3 - Main/Project 3 - Press Project.csproj'
   #        - dotnet build 'Project 3 - Main/Project 3 - Press Project.csproj'
   #  - stage: "test"
   #    Name: "Test core application on .NET Core 3.1"
   #    script:
   #        - cd TestPressProject 
   #        - dotnet add package NUnit.Console
   #        - dotnet restore TestPressProject.csproj
   #        - dotnet build TestPressProject.csproj
   #        - do0tnet test TestPressProject.csproj
     - stage: "qualimetry"
       if: branch = sonar
       Name: "Build on .NET Core and send to sonar"
       before_script:          
          - wget -O sonar.zip https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/4.8.0.12008/sonar-scanner-msbuild-4.8.0.12008-netcoreapp3.0.zip
          - mkdir -p tools/sonar
          - unzip -qq sonar.zip -d tools/sonar
          # - chmod +x tools/sonar/sonar-scanner-4.8.0.12008/bin/sonar-scanner
       script:  
         - dotnet restore 'Project 3 - Main (Only NonUI for Travis).sln'
         - dotnet build 'Project 3 - Main (Only NonUI for Travis).sln'
         - dotnet tool install --global dotnet-sonarscanner --version 4.8.0
         - dotnet sonarscanner begin /k:"kali-ci" curl -0 -O trusted-sonar-instance.certificate.pem https://melo-mania.fr/cert.pem
         - keytool -import -alias melo-mania-instance -file trusted-sonar-instance.certificate.pem -storetype JKS -keystore server.truststore -noprompt -storepass changeit
         - dotnet sonarcanner end
